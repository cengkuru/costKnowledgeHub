rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        request.auth.token.admin == true;
    }
    
    function isValidResourceFile() {
      return request.resource.size < 50 * 1024 * 1024 && // Max 50MB
        request.resource.contentType.matches('application/pdf|application/msword|application/vnd.*|text/csv|image/*|application/zip|application/x-zip-compressed');
    }
    
    // Resources folder
    match /resources/{allPaths=**} {
      // Anyone can read resource files
      allow read: if true;
      
      // Only admins can upload/modify/delete resource files
      allow create: if isAdmin() && isValidResourceFile();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Thumbnails folder
    match /thumbnails/{allPaths=**} {
      // Anyone can read thumbnails
      allow read: if true;
      
      // Only admins can upload/modify/delete thumbnails
      allow create: if isAdmin() && 
        request.resource.size < 5 * 1024 * 1024 && // Max 5MB
        request.resource.contentType.matches('image/*');
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Temporary uploads (for processing)
    match /temp/{userId}/{allPaths=**} {
      // Users can only access their own temp files
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() && 
        request.auth.uid == userId &&
        request.resource.size < 50 * 1024 * 1024;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Admin uploads (for admin-only files)
    match /admin/{allPaths=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}
